// Mocks generated by Mockito 5.1.0 from annotations
// in catchfish/test/features/gameBoard/data/repositories/select_group_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:catchfish/core/errors/failures.dart' as _i5;
import 'package:catchfish/features/gameBoard/data/datasources/fishing/remote_datasource.dart'
    as _i3;
import 'package:catchfish/features/gameBoard/data/models/fishing/list_group_model.dart'
    as _i6;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [RemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDatasource extends _i1.Mock implements _i3.RemoteDatasource {
  MockRemoteDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> deleteGroup(String? groupName) =>
      (super.noSuchMethod(Invocation.method(#deleteGroup, [groupName]),
              returnValue: Future<_i2.Either<_i5.Failure, bool>>.value(
                  _FakeEither_0<_i5.Failure, bool>()))
          as _i4.Future<_i2.Either<_i5.Failure, bool>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> addPlayerToGroup(
          String? groupName) =>
      (super.noSuchMethod(Invocation.method(#addPlayerToGroup, [groupName]),
              returnValue: Future<_i2.Either<_i5.Failure, bool>>.value(
                  _FakeEither_0<_i5.Failure, bool>()))
          as _i4.Future<_i2.Either<_i5.Failure, bool>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<dynamic>>> getPlayersForSelectedGroup(
          String? selectedGroupName) =>
      (super.noSuchMethod(
          Invocation.method(#getPlayersForSelectedGroup, [selectedGroupName]),
          returnValue: Future<_i2.Either<_i5.Failure, List<dynamic>>>.value(
              _FakeEither_0<_i5.Failure, List<dynamic>>())) as _i4
          .Future<_i2.Either<_i5.Failure, List<dynamic>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<dynamic>>> getExistingGroups() =>
      (super.noSuchMethod(Invocation.method(#getExistingGroups, []),
              returnValue: Future<_i2.Either<_i5.Failure, List<dynamic>>>.value(
                  _FakeEither_0<_i5.Failure, List<dynamic>>()))
          as _i4.Future<_i2.Either<_i5.Failure, List<dynamic>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> updateLevelPlayer(int? newLevel) =>
      (super.noSuchMethod(Invocation.method(#updateLevelPlayer, [newLevel]),
              returnValue: Future<_i2.Either<_i5.Failure, bool>>.value(
                  _FakeEither_0<_i5.Failure, bool>()))
          as _i4.Future<_i2.Either<_i5.Failure, bool>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, int>> getLevelPlayer() =>
      (super.noSuchMethod(Invocation.method(#getLevelPlayer, []),
              returnValue: Future<_i2.Either<_i5.Failure, int>>.value(
                  _FakeEither_0<_i5.Failure, int>()))
          as _i4.Future<_i2.Either<_i5.Failure, int>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<dynamic>>> getPersonalShop() =>
      (super.noSuchMethod(Invocation.method(#getPersonalShop, []),
              returnValue: Future<_i2.Either<_i5.Failure, List<dynamic>>>.value(
                  _FakeEither_0<_i5.Failure, List<dynamic>>()))
          as _i4.Future<_i2.Either<_i5.Failure, List<dynamic>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> addFishPersonalShop(
          String? detailsFish) =>
      (super.noSuchMethod(
              Invocation.method(#addFishPersonalShop, [detailsFish]),
              returnValue: Future<_i2.Either<_i5.Failure, bool>>.value(
                  _FakeEither_0<_i5.Failure, bool>()))
          as _i4.Future<_i2.Either<_i5.Failure, bool>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> removeFishPersonalShop(
          String? detailsFish) =>
      (super.noSuchMethod(
              Invocation.method(#removeFishPersonalShop, [detailsFish]),
              returnValue: Future<_i2.Either<_i5.Failure, bool>>.value(
                  _FakeEither_0<_i5.Failure, bool>()))
          as _i4.Future<_i2.Either<_i5.Failure, bool>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.ListGroupModel>>
      retreiveListGroups() =>
          (super.noSuchMethod(Invocation.method(#retreiveListGroups, []),
                  returnValue:
                      Future<_i2.Either<_i5.Failure, _i6.ListGroupModel>>.value(
                          _FakeEither_0<_i5.Failure, _i6.ListGroupModel>()))
              as _i4.Future<_i2.Either<_i5.Failure, _i6.ListGroupModel>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> addUserToGroup(
          String? groupName, String? yourName) =>
      (super.noSuchMethod(
              Invocation.method(#addUserToGroup, [groupName, yourName]),
              returnValue: Future<_i2.Either<_i5.Failure, bool>>.value(
                  _FakeEither_0<_i5.Failure, bool>()))
          as _i4.Future<_i2.Either<_i5.Failure, bool>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> createNewGroup(
          String? groupName, String? yourName) =>
      (super.noSuchMethod(
              Invocation.method(#createNewGroup, [groupName, yourName]),
              returnValue: Future<_i2.Either<_i5.Failure, bool>>.value(
                  _FakeEither_0<_i5.Failure, bool>()))
          as _i4.Future<_i2.Either<_i5.Failure, bool>>);
}
